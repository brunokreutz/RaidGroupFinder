@using RaidGroupFinder.Data.Model
@inject NavigationManager NavigationManager
@inject RaidGroupFinder.Data.DbService DbService

<div class="ui grid bg-indianred raid-card" @onclick="JoinRoom">
    <img src="@IconPath" class="five wide column bg-img">
    <div class="nine wide column padding-bottom-10 padding-top-10">
        <div class="header">
            <div class="float-right">
                @*@for (int i = 0; i < RaidBattle.Raid.Tier; i++)
                {
                    <img src="/icons/raid-icon-24.png" class="raid-icon" />
                }*@
                <div class="float-right">
                    Tier @RaidBattle.Raid.Tier
                </div>
            </div>
            <div class="text-white text-xl-left">@RaidBattle.Raid.Pokemon.Name</div>

            <div class="text-white">Host: @RaidBattle.Host</div>
            @if (OffSet == null)
            {
                <div class="text-white">Hatched: @RaidBattle.Hatched.ToShortTimeString()</div>
            }
            else
            {
                <div class="text-white">Hatched: @RaidBattle.Hatched.Add(OffSet).ToShortTimeString()</div>
            }
            <div class="text-white">Players: (@Players/6)</div>
        </div>
    </div>
    <div class="two wide column d-flex align-items-center">
        <img src="/icons/next-24.svg" />
    </div>
</div>
@code {
    [Parameter]
    public RaidBattle RaidBattle { get; set; }
    [Parameter]
    public string IconPath { get; set; }
    [Parameter]
    public TimeSpan OffSet { get; set; }

    private int Players = 1; 

    void JoinRoom()
    {
        NavigationManager.NavigateTo($"raid/{RaidBattle.Guid}");
    }
    protected override async Task OnInitializedAsync()
    {
        Players = await DbService.GetPlayersInRaidRoom(RaidBattle.Guid);
        StateHasChanged();
    }
}
